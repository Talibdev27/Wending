I need help fixing a critical security issue in my Node.js wedding management website. Currently, users can see all weddings in the system regardless of ownership, which violates data privacy. Here are the specific requirements:

1. **Data Isolation**:
   - Each user should only see weddings they've created
   - Implement proper ownership checking for all wedding-related routes
   - Admin users should still see all weddings

2. **Backend Changes Needed**:
   - Modify wedding routes to filter by authenticated user
   - Add ownership verification middleware
   - Update database queries to include user filtering

3. **Middleware Example**:
   ```javascript
   async function verifyWeddingOwnership(req, res, next) {
     const wedding = await Wedding.findById(req.params.id);
     if (!wedding) return res.status(404).send('Wedding not found');
     if (wedding.createdBy.toString() !== req.user._id.toString() && req.user.role !== 'admin') {
       return res.status(403).send('Unauthorized access');
     }
     next();
   }
Route Protection:

Apply the middleware to all wedding routes except index (which should filter by user)

Ensure admin users bypass ownership checks

Frontend Filtering:

When fetching weddings, include the user ID in the request

Only display weddings returned by the filtered backend response

Please provide complete code solutions for:

The updated wedding model with ownership tracking

The authentication middleware

Protected route examples

Frontend API call modifications

Any necessary database migration scripts

text

## Additional Recommendations
1. **Testing**:
   - Create test cases for different user roles
   - Verify users can't access others' weddings
   - Test admin override functionality

2. **Future Scaling**:
   - Consider adding wedding "collaborators" for shared management
   - Implement proper role-based access control (RBAC)
   - Add logging for security auditing

3. **Security**:
   - Ensure all API endpoints properly check ownership
   - Implement rate limiting to prevent brute force attacks
   - Use HTTPS for all communications

This solution will ensure proper data isolation between users while maintaining functionality for administrators, creating a secure foundation as your user base grows.
